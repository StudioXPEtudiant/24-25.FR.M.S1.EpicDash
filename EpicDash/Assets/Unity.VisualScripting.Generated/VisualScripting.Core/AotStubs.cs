#pragma warning disable 219
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unity.VisualScripting.Generated.Aot
{
	
	
	// --------------- Setting Stubs
	// string.op_Equality
	// string.op_Inequality
	// float.op_Equality
	// float.op_Inequality
	// float.op_LessThan
	// float.op_GreaterThan
	// float.op_LessThanOrEqual
	// float.op_GreaterThanOrEqual
	// UnityEngine.AI.NavMeshAgent.op_Implicit
	// UnityEngine.AI.NavMeshAgent.op_Equality
	// UnityEngine.AI.NavMeshAgent.op_Inequality
	// UnityEngine.AI.NavMeshObstacle.op_Implicit
	// UnityEngine.AI.NavMeshObstacle.op_Equality
	// UnityEngine.AI.NavMeshObstacle.op_Inequality
	// UnityEngine.AI.OffMeshLink.op_Implicit
	// UnityEngine.AI.OffMeshLink.op_Equality
	// UnityEngine.AI.OffMeshLink.op_Inequality
	// UnityEngine.AI.NavMeshData.op_Implicit
	// UnityEngine.AI.NavMeshData.op_Equality
	// UnityEngine.AI.NavMeshData.op_Inequality
	// UnityEngine.Animator.op_Implicit
	// UnityEngine.Animator.op_Equality
	// UnityEngine.Animator.op_Inequality
	// UnityEngine.StateMachineBehaviour.op_Implicit
	// UnityEngine.StateMachineBehaviour.op_Equality
	// UnityEngine.StateMachineBehaviour.op_Inequality
	// UnityEngine.Animation.op_Implicit
	// UnityEngine.Animation.op_Equality
	// UnityEngine.Animation.op_Inequality
	// UnityEngine.AnimationClip.op_Implicit
	// UnityEngine.AnimationClip.op_Equality
	// UnityEngine.AnimationClip.op_Inequality
	// UnityEngine.AnimatorOverrideController.op_Implicit
	// UnityEngine.AnimatorOverrideController.op_Equality
	// UnityEngine.AnimatorOverrideController.op_Inequality
	// UnityEngine.Avatar.op_Implicit
	// UnityEngine.Avatar.op_Equality
	// UnityEngine.Avatar.op_Inequality
	// UnityEngine.AvatarMask.op_Implicit
	// UnityEngine.AvatarMask.op_Equality
	// UnityEngine.AvatarMask.op_Inequality
	// UnityEngine.Motion.op_Implicit
	// UnityEngine.Motion.op_Equality
	// UnityEngine.Motion.op_Inequality
	// UnityEngine.RuntimeAnimatorController.op_Implicit
	// UnityEngine.RuntimeAnimatorController.op_Equality
	// UnityEngine.RuntimeAnimatorController.op_Inequality
	// UnityEngine.Animations.AimConstraint.op_Implicit
	// UnityEngine.Animations.AimConstraint.op_Equality
	// UnityEngine.Animations.AimConstraint.op_Inequality
	// UnityEngine.Animations.PositionConstraint.op_Implicit
	// UnityEngine.Animations.PositionConstraint.op_Equality
	// UnityEngine.Animations.PositionConstraint.op_Inequality
	// UnityEngine.Animations.RotationConstraint.op_Implicit
	// UnityEngine.Animations.RotationConstraint.op_Equality
	// UnityEngine.Animations.RotationConstraint.op_Inequality
	// UnityEngine.Animations.ScaleConstraint.op_Implicit
	// UnityEngine.Animations.ScaleConstraint.op_Equality
	// UnityEngine.Animations.ScaleConstraint.op_Inequality
	// UnityEngine.Animations.LookAtConstraint.op_Implicit
	// UnityEngine.Animations.LookAtConstraint.op_Equality
	// UnityEngine.Animations.LookAtConstraint.op_Inequality
	// UnityEngine.Animations.ParentConstraint.op_Implicit
	// UnityEngine.Animations.ParentConstraint.op_Equality
	// UnityEngine.Animations.ParentConstraint.op_Inequality
	// UnityEngine.AssetBundle.op_Implicit
	// UnityEngine.AssetBundle.op_Equality
	// UnityEngine.AssetBundle.op_Inequality
	// UnityEngine.AssetBundleManifest.op_Implicit
	// UnityEngine.AssetBundleManifest.op_Equality
	// UnityEngine.AssetBundleManifest.op_Inequality
	// UnityEngine.AudioSource.op_Implicit
	// UnityEngine.AudioSource.op_Equality
	// UnityEngine.AudioSource.op_Inequality
	// UnityEngine.AudioLowPassFilter.op_Implicit
	// UnityEngine.AudioLowPassFilter.op_Equality
	// UnityEngine.AudioLowPassFilter.op_Inequality
	// UnityEngine.AudioHighPassFilter.op_Implicit
	// UnityEngine.AudioHighPassFilter.op_Equality
	// UnityEngine.AudioHighPassFilter.op_Inequality
	// UnityEngine.AudioReverbFilter.op_Implicit
	// UnityEngine.AudioReverbFilter.op_Equality
	// UnityEngine.AudioReverbFilter.op_Inequality
	// UnityEngine.AudioClip.op_Implicit
	// UnityEngine.AudioClip.op_Equality
	// UnityEngine.AudioClip.op_Inequality
	// UnityEngine.AudioBehaviour.op_Implicit
	// UnityEngine.AudioBehaviour.op_Equality
	// UnityEngine.AudioBehaviour.op_Inequality
	// UnityEngine.AudioListener.op_Implicit
	// UnityEngine.AudioListener.op_Equality
	// UnityEngine.AudioListener.op_Inequality
	// UnityEngine.AudioReverbZone.op_Implicit
	// UnityEngine.AudioReverbZone.op_Equality
	// UnityEngine.AudioReverbZone.op_Inequality
	// UnityEngine.AudioDistortionFilter.op_Implicit
	// UnityEngine.AudioDistortionFilter.op_Equality
	// UnityEngine.AudioDistortionFilter.op_Inequality
	// UnityEngine.AudioEchoFilter.op_Implicit
	// UnityEngine.AudioEchoFilter.op_Equality
	// UnityEngine.AudioEchoFilter.op_Inequality
	// UnityEngine.AudioChorusFilter.op_Implicit
	// UnityEngine.AudioChorusFilter.op_Equality
	// UnityEngine.AudioChorusFilter.op_Inequality
	// UnityEngine.WebCamTexture.op_Implicit
	// UnityEngine.WebCamTexture.op_Equality
	// UnityEngine.WebCamTexture.op_Inequality
	// UnityEngine.Audio.AudioMixer.op_Implicit
	// UnityEngine.Audio.AudioMixer.op_Equality
	// UnityEngine.Audio.AudioMixer.op_Inequality
	// UnityEngine.Audio.AudioMixerGroup.op_Implicit
	// UnityEngine.Audio.AudioMixerGroup.op_Equality
	// UnityEngine.Audio.AudioMixerGroup.op_Inequality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
	// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
	// UnityEngine.Cloth.op_Implicit
	// UnityEngine.Cloth.op_Equality
	// UnityEngine.Cloth.op_Inequality
	// UnityEngine.Camera.op_Implicit
	// UnityEngine.Camera.op_Equality
	// UnityEngine.Camera.op_Inequality
	// UnityEngine.FlareLayer.op_Implicit
	// UnityEngine.FlareLayer.op_Equality
	// UnityEngine.FlareLayer.op_Inequality
	// UnityEngine.ReflectionProbe.op_Implicit
	// UnityEngine.ReflectionProbe.op_Equality
	// UnityEngine.ReflectionProbe.op_Inequality
	// UnityEngine.Bounds.op_Equality
	// UnityEngine.Bounds.op_Inequality
	// UnityEngine.Rect.op_Inequality
	// UnityEngine.Rect.op_Equality
	// UnityEngine.LightingSettings.op_Implicit
	// UnityEngine.LightingSettings.op_Equality
	// UnityEngine.LightingSettings.op_Inequality
	// UnityEngine.BillboardAsset.op_Implicit
	// UnityEngine.BillboardAsset.op_Equality
	// UnityEngine.BillboardAsset.op_Inequality
	// UnityEngine.BillboardRenderer.op_Implicit
	// UnityEngine.BillboardRenderer.op_Equality
	// UnityEngine.BillboardRenderer.op_Inequality
	// UnityEngine.LightmapSettings.op_Implicit
	// UnityEngine.LightmapSettings.op_Equality
	// UnityEngine.LightmapSettings.op_Inequality
	// UnityEngine.LightProbes.op_Implicit
	// UnityEngine.LightProbes.op_Equality
	// UnityEngine.LightProbes.op_Inequality
	// UnityEngine.QualitySettings.op_Implicit
	// UnityEngine.QualitySettings.op_Equality
	// UnityEngine.QualitySettings.op_Inequality
	// UnityEngine.Mesh.op_Implicit
	// UnityEngine.Mesh.op_Equality
	// UnityEngine.Mesh.op_Inequality
	// UnityEngine.Renderer.op_Implicit
	// UnityEngine.Renderer.op_Equality
	// UnityEngine.Renderer.op_Inequality
	// UnityEngine.Projector.op_Implicit
	// UnityEngine.Projector.op_Equality
	// UnityEngine.Projector.op_Inequality
	// UnityEngine.Shader.op_Implicit
	// UnityEngine.Shader.op_Equality
	// UnityEngine.Shader.op_Inequality
	// UnityEngine.TrailRenderer.op_Implicit
	// UnityEngine.TrailRenderer.op_Equality
	// UnityEngine.TrailRenderer.op_Inequality
	// UnityEngine.LineRenderer.op_Implicit
	// UnityEngine.LineRenderer.op_Equality
	// UnityEngine.LineRenderer.op_Inequality
	// UnityEngine.RenderSettings.op_Implicit
	// UnityEngine.RenderSettings.op_Equality
	// UnityEngine.RenderSettings.op_Inequality
	// UnityEngine.Material.op_Implicit
	// UnityEngine.Material.op_Equality
	// UnityEngine.Material.op_Inequality
	// UnityEngine.OcclusionPortal.op_Implicit
	// UnityEngine.OcclusionPortal.op_Equality
	// UnityEngine.OcclusionPortal.op_Inequality
	// UnityEngine.OcclusionArea.op_Implicit
	// UnityEngine.OcclusionArea.op_Equality
	// UnityEngine.OcclusionArea.op_Inequality
	// UnityEngine.Flare.op_Implicit
	// UnityEngine.Flare.op_Equality
	// UnityEngine.Flare.op_Inequality
	// UnityEngine.LensFlare.op_Implicit
	// UnityEngine.LensFlare.op_Equality
	// UnityEngine.LensFlare.op_Inequality
	// UnityEngine.Light.op_Implicit
	// UnityEngine.Light.op_Equality
	// UnityEngine.Light.op_Inequality
	// UnityEngine.Skybox.op_Implicit
	// UnityEngine.Skybox.op_Equality
	// UnityEngine.Skybox.op_Inequality
	// UnityEngine.MeshFilter.op_Implicit
	// UnityEngine.MeshFilter.op_Equality
	// UnityEngine.MeshFilter.op_Inequality
	// UnityEngine.LightProbeProxyVolume.op_Implicit
	// UnityEngine.LightProbeProxyVolume.op_Equality
	// UnityEngine.LightProbeProxyVolume.op_Inequality
	// UnityEngine.SkinnedMeshRenderer.op_Implicit
	// UnityEngine.SkinnedMeshRenderer.op_Equality
	// UnityEngine.SkinnedMeshRenderer.op_Inequality
	// UnityEngine.MeshRenderer.op_Implicit
	// UnityEngine.MeshRenderer.op_Equality
	// UnityEngine.MeshRenderer.op_Inequality
	// UnityEngine.LightProbeGroup.op_Implicit
	// UnityEngine.LightProbeGroup.op_Equality
	// UnityEngine.LightProbeGroup.op_Inequality
	// UnityEngine.LODGroup.op_Implicit
	// UnityEngine.LODGroup.op_Equality
	// UnityEngine.LODGroup.op_Inequality
	// UnityEngine.Texture.op_Implicit
	// UnityEngine.Texture.op_Equality
	// UnityEngine.Texture.op_Inequality
	// UnityEngine.Texture2D.op_Implicit
	// UnityEngine.Texture2D.op_Equality
	// UnityEngine.Texture2D.op_Inequality
	// UnityEngine.Cubemap.op_Implicit
	// UnityEngine.Cubemap.op_Equality
	// UnityEngine.Cubemap.op_Inequality
	// UnityEngine.Texture3D.op_Implicit
	// UnityEngine.Texture3D.op_Equality
	// UnityEngine.Texture3D.op_Inequality
	// UnityEngine.Texture2DArray.op_Implicit
	// UnityEngine.Texture2DArray.op_Equality
	// UnityEngine.Texture2DArray.op_Inequality
	// UnityEngine.CubemapArray.op_Implicit
	// UnityEngine.CubemapArray.op_Equality
	// UnityEngine.CubemapArray.op_Inequality
	// UnityEngine.SparseTexture.op_Implicit
	// UnityEngine.SparseTexture.op_Equality
	// UnityEngine.SparseTexture.op_Inequality
	// UnityEngine.RenderTexture.op_Implicit
	// UnityEngine.RenderTexture.op_Equality
	// UnityEngine.RenderTexture.op_Inequality
	// UnityEngine.CustomRenderTexture.op_Implicit
	// UnityEngine.CustomRenderTexture.op_Equality
	// UnityEngine.CustomRenderTexture.op_Inequality
	// UnityEngine.Color.op_Addition
	// UnityEngine.Color.op_Subtraction
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Division
	// UnityEngine.Color.op_Equality
	// UnityEngine.Color.op_Inequality
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Matrix4x4.op_Equality
	// UnityEngine.Matrix4x4.op_Inequality
	// UnityEngine.Vector3.op_Addition
	// UnityEngine.Vector3.op_Subtraction
	// UnityEngine.Vector3.op_UnaryNegation
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Division
	// UnityEngine.Vector3.op_Equality
	// UnityEngine.Vector3.op_Inequality
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.op_Equality
	// UnityEngine.Quaternion.op_Inequality
	// UnityEngine.Vector2.op_Addition
	// UnityEngine.Vector2.op_Subtraction
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_UnaryNegation
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Equality
	// UnityEngine.Vector2.op_Inequality
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector4.op_Addition
	// UnityEngine.Vector4.op_Subtraction
	// UnityEngine.Vector4.op_UnaryNegation
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Division
	// UnityEngine.Vector4.op_Equality
	// UnityEngine.Vector4.op_Inequality
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Behaviour.op_Implicit
	// UnityEngine.Behaviour.op_Equality
	// UnityEngine.Behaviour.op_Inequality
	// UnityEngine.Component.op_Implicit
	// UnityEngine.Component.op_Equality
	// UnityEngine.Component.op_Inequality
	// UnityEngine.GameObject.op_Implicit
	// UnityEngine.GameObject.op_Equality
	// UnityEngine.GameObject.op_Inequality
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.MonoBehaviour.op_Implicit
	// UnityEngine.MonoBehaviour.op_Equality
	// UnityEngine.MonoBehaviour.op_Inequality
	// UnityEngine.ScriptableObject.op_Implicit
	// UnityEngine.ScriptableObject.op_Equality
	// UnityEngine.ScriptableObject.op_Inequality
	// UnityEngine.TextAsset.op_Implicit
	// UnityEngine.TextAsset.op_Equality
	// UnityEngine.TextAsset.op_Inequality
	// UnityEngine.Object.op_Implicit
	// UnityEngine.Object.op_Equality
	// UnityEngine.Object.op_Inequality
	// UnityEngine.ComputeShader.op_Implicit
	// UnityEngine.ComputeShader.op_Equality
	// UnityEngine.ComputeShader.op_Inequality
	// UnityEngine.ShaderVariantCollection.op_Implicit
	// UnityEngine.ShaderVariantCollection.op_Equality
	// UnityEngine.ShaderVariantCollection.op_Inequality
	// UnityEngine.RectTransform.op_Implicit
	// UnityEngine.RectTransform.op_Equality
	// UnityEngine.RectTransform.op_Inequality
	// UnityEngine.Transform.op_Implicit
	// UnityEngine.Transform.op_Equality
	// UnityEngine.Transform.op_Inequality
	// UnityEngine.SpriteRenderer.op_Implicit
	// UnityEngine.SpriteRenderer.op_Equality
	// UnityEngine.SpriteRenderer.op_Inequality
	// UnityEngine.Sprite.op_Implicit
	// UnityEngine.Sprite.op_Equality
	// UnityEngine.Sprite.op_Inequality
	// UnityEngine.U2D.Light2DBase.op_Implicit
	// UnityEngine.U2D.Light2DBase.op_Equality
	// UnityEngine.U2D.Light2DBase.op_Inequality
	// UnityEngine.U2D.SpriteAtlas.op_Implicit
	// UnityEngine.U2D.SpriteAtlas.op_Equality
	// UnityEngine.U2D.SpriteAtlas.op_Inequality
	// UnityEngine.SceneManagement.Scene.op_Equality
	// UnityEngine.SceneManagement.Scene.op_Inequality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
	// UnityEngine.Rendering.GraphicsSettings.op_Implicit
	// UnityEngine.Rendering.GraphicsSettings.op_Equality
	// UnityEngine.Rendering.GraphicsSettings.op_Inequality
	// UnityEngine.Rendering.RenderPipelineAsset.op_Implicit
	// UnityEngine.Rendering.RenderPipelineAsset.op_Equality
	// UnityEngine.Rendering.RenderPipelineAsset.op_Inequality
	// UnityEngine.Rendering.RenderPipelineGlobalSettings.op_Implicit
	// UnityEngine.Rendering.RenderPipelineGlobalSettings.op_Equality
	// UnityEngine.Rendering.RenderPipelineGlobalSettings.op_Inequality
	// UnityEngine.Rendering.SortingGroup.op_Implicit
	// UnityEngine.Rendering.SortingGroup.op_Equality
	// UnityEngine.Rendering.SortingGroup.op_Inequality
	// UnityEngine.Playables.PlayableAsset.op_Implicit
	// UnityEngine.Playables.PlayableAsset.op_Equality
	// UnityEngine.Playables.PlayableAsset.op_Inequality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
	// UnityEngine.Playables.PlayableDirector.op_Implicit
	// UnityEngine.Playables.PlayableDirector.op_Equality
	// UnityEngine.Playables.PlayableDirector.op_Inequality
	// UnityEngine.GUISkin.op_Implicit
	// UnityEngine.GUISkin.op_Equality
	// UnityEngine.GUISkin.op_Inequality
	// UnityEngine.ParticleSystem.op_Implicit
	// UnityEngine.ParticleSystem.op_Equality
	// UnityEngine.ParticleSystem.op_Inequality
	// UnityEngine.ParticleSystemRenderer.op_Implicit
	// UnityEngine.ParticleSystemRenderer.op_Equality
	// UnityEngine.ParticleSystemRenderer.op_Inequality
	// UnityEngine.ParticleSystemForceField.op_Implicit
	// UnityEngine.ParticleSystemForceField.op_Equality
	// UnityEngine.ParticleSystemForceField.op_Inequality
	// UnityEngine.ArticulationBody.op_Implicit
	// UnityEngine.ArticulationBody.op_Equality
	// UnityEngine.ArticulationBody.op_Inequality
	// UnityEngine.PhysicMaterial.op_Implicit
	// UnityEngine.PhysicMaterial.op_Equality
	// UnityEngine.PhysicMaterial.op_Inequality
	// UnityEngine.Rigidbody.op_Implicit
	// UnityEngine.Rigidbody.op_Equality
	// UnityEngine.Rigidbody.op_Inequality
	// UnityEngine.Collider.op_Implicit
	// UnityEngine.Collider.op_Equality
	// UnityEngine.Collider.op_Inequality
	// UnityEngine.CharacterController.op_Implicit
	// UnityEngine.CharacterController.op_Equality
	// UnityEngine.CharacterController.op_Inequality
	// UnityEngine.MeshCollider.op_Implicit
	// UnityEngine.MeshCollider.op_Equality
	// UnityEngine.MeshCollider.op_Inequality
	// UnityEngine.CapsuleCollider.op_Implicit
	// UnityEngine.CapsuleCollider.op_Equality
	// UnityEngine.CapsuleCollider.op_Inequality
	// UnityEngine.BoxCollider.op_Implicit
	// UnityEngine.BoxCollider.op_Equality
	// UnityEngine.BoxCollider.op_Inequality
	// UnityEngine.SphereCollider.op_Implicit
	// UnityEngine.SphereCollider.op_Equality
	// UnityEngine.SphereCollider.op_Inequality
	// UnityEngine.ConstantForce.op_Implicit
	// UnityEngine.ConstantForce.op_Equality
	// UnityEngine.ConstantForce.op_Inequality
	// UnityEngine.Joint.op_Implicit
	// UnityEngine.Joint.op_Equality
	// UnityEngine.Joint.op_Inequality
	// UnityEngine.HingeJoint.op_Implicit
	// UnityEngine.HingeJoint.op_Equality
	// UnityEngine.HingeJoint.op_Inequality
	// UnityEngine.SpringJoint.op_Implicit
	// UnityEngine.SpringJoint.op_Equality
	// UnityEngine.SpringJoint.op_Inequality
	// UnityEngine.FixedJoint.op_Implicit
	// UnityEngine.FixedJoint.op_Equality
	// UnityEngine.FixedJoint.op_Inequality
	// UnityEngine.CharacterJoint.op_Implicit
	// UnityEngine.CharacterJoint.op_Equality
	// UnityEngine.CharacterJoint.op_Inequality
	// UnityEngine.ConfigurableJoint.op_Implicit
	// UnityEngine.ConfigurableJoint.op_Equality
	// UnityEngine.ConfigurableJoint.op_Inequality
	// UnityEngine.RaycastHit2D.op_Implicit
	// UnityEngine.Rigidbody2D.op_Implicit
	// UnityEngine.Rigidbody2D.op_Equality
	// UnityEngine.Rigidbody2D.op_Inequality
	// UnityEngine.Collider2D.op_Implicit
	// UnityEngine.Collider2D.op_Equality
	// UnityEngine.Collider2D.op_Inequality
	// UnityEngine.CustomCollider2D.op_Implicit
	// UnityEngine.CustomCollider2D.op_Equality
	// UnityEngine.CustomCollider2D.op_Inequality
	// UnityEngine.CircleCollider2D.op_Implicit
	// UnityEngine.CircleCollider2D.op_Equality
	// UnityEngine.CircleCollider2D.op_Inequality
	// UnityEngine.CapsuleCollider2D.op_Implicit
	// UnityEngine.CapsuleCollider2D.op_Equality
	// UnityEngine.CapsuleCollider2D.op_Inequality
	// UnityEngine.EdgeCollider2D.op_Implicit
	// UnityEngine.EdgeCollider2D.op_Equality
	// UnityEngine.EdgeCollider2D.op_Inequality
	// UnityEngine.BoxCollider2D.op_Implicit
	// UnityEngine.BoxCollider2D.op_Equality
	// UnityEngine.BoxCollider2D.op_Inequality
	// UnityEngine.PolygonCollider2D.op_Implicit
	// UnityEngine.PolygonCollider2D.op_Equality
	// UnityEngine.PolygonCollider2D.op_Inequality
	// UnityEngine.CompositeCollider2D.op_Implicit
	// UnityEngine.CompositeCollider2D.op_Equality
	// UnityEngine.CompositeCollider2D.op_Inequality
	// UnityEngine.Joint2D.op_Implicit
	// UnityEngine.Joint2D.op_Equality
	// UnityEngine.Joint2D.op_Inequality
	// UnityEngine.AnchoredJoint2D.op_Implicit
	// UnityEngine.AnchoredJoint2D.op_Equality
	// UnityEngine.AnchoredJoint2D.op_Inequality
	// UnityEngine.SpringJoint2D.op_Implicit
	// UnityEngine.SpringJoint2D.op_Equality
	// UnityEngine.SpringJoint2D.op_Inequality
	// UnityEngine.DistanceJoint2D.op_Implicit
	// UnityEngine.DistanceJoint2D.op_Equality
	// UnityEngine.DistanceJoint2D.op_Inequality
	// UnityEngine.FrictionJoint2D.op_Implicit
	// UnityEngine.FrictionJoint2D.op_Equality
	// UnityEngine.FrictionJoint2D.op_Inequality
	// UnityEngine.HingeJoint2D.op_Implicit
	// UnityEngine.HingeJoint2D.op_Equality
	// UnityEngine.HingeJoint2D.op_Inequality
	// UnityEngine.RelativeJoint2D.op_Implicit
	// UnityEngine.RelativeJoint2D.op_Equality
	// UnityEngine.RelativeJoint2D.op_Inequality
	// UnityEngine.SliderJoint2D.op_Implicit
	// UnityEngine.SliderJoint2D.op_Equality
	// UnityEngine.SliderJoint2D.op_Inequality
	// UnityEngine.TargetJoint2D.op_Implicit
	// UnityEngine.TargetJoint2D.op_Equality
	// UnityEngine.TargetJoint2D.op_Inequality
	// UnityEngine.FixedJoint2D.op_Implicit
	// UnityEngine.FixedJoint2D.op_Equality
	// UnityEngine.FixedJoint2D.op_Inequality
	// UnityEngine.WheelJoint2D.op_Implicit
	// UnityEngine.WheelJoint2D.op_Equality
	// UnityEngine.WheelJoint2D.op_Inequality
	// UnityEngine.Effector2D.op_Implicit
	// UnityEngine.Effector2D.op_Equality
	// UnityEngine.Effector2D.op_Inequality
	// UnityEngine.AreaEffector2D.op_Implicit
	// UnityEngine.AreaEffector2D.op_Equality
	// UnityEngine.AreaEffector2D.op_Inequality
	// UnityEngine.BuoyancyEffector2D.op_Implicit
	// UnityEngine.BuoyancyEffector2D.op_Equality
	// UnityEngine.BuoyancyEffector2D.op_Inequality
	// UnityEngine.PointEffector2D.op_Implicit
	// UnityEngine.PointEffector2D.op_Equality
	// UnityEngine.PointEffector2D.op_Inequality
	// UnityEngine.PlatformEffector2D.op_Implicit
	// UnityEngine.PlatformEffector2D.op_Equality
	// UnityEngine.PlatformEffector2D.op_Inequality
	// UnityEngine.SurfaceEffector2D.op_Implicit
	// UnityEngine.SurfaceEffector2D.op_Equality
	// UnityEngine.SurfaceEffector2D.op_Inequality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
	// UnityEngine.ConstantForce2D.op_Implicit
	// UnityEngine.ConstantForce2D.op_Equality
	// UnityEngine.ConstantForce2D.op_Inequality
	// UnityEngine.PhysicsMaterial2D.op_Implicit
	// UnityEngine.PhysicsMaterial2D.op_Equality
	// UnityEngine.PhysicsMaterial2D.op_Inequality
	// UnityEngine.SpriteMask.op_Implicit
	// UnityEngine.SpriteMask.op_Equality
	// UnityEngine.SpriteMask.op_Inequality
	// UnityEngine.Terrain.op_Implicit
	// UnityEngine.Terrain.op_Equality
	// UnityEngine.Terrain.op_Inequality
	// UnityEngine.Tree.op_Implicit
	// UnityEngine.Tree.op_Equality
	// UnityEngine.Tree.op_Inequality
	// UnityEngine.TerrainData.op_Implicit
	// UnityEngine.TerrainData.op_Equality
	// UnityEngine.TerrainData.op_Inequality
	// UnityEngine.TerrainLayer.op_Implicit
	// UnityEngine.TerrainLayer.op_Equality
	// UnityEngine.TerrainLayer.op_Inequality
	// UnityEngine.TerrainCollider.op_Implicit
	// UnityEngine.TerrainCollider.op_Equality
	// UnityEngine.TerrainCollider.op_Inequality
	// UnityEngine.TextMesh.op_Implicit
	// UnityEngine.TextMesh.op_Equality
	// UnityEngine.TextMesh.op_Inequality
	// UnityEngine.Font.op_Implicit
	// UnityEngine.Font.op_Equality
	// UnityEngine.Font.op_Inequality
	// UnityEngine.GridBrushBase.op_Implicit
	// UnityEngine.GridBrushBase.op_Equality
	// UnityEngine.GridBrushBase.op_Inequality
	// UnityEngine.Tilemaps.Tile.op_Implicit
	// UnityEngine.Tilemaps.Tile.op_Equality
	// UnityEngine.Tilemaps.Tile.op_Inequality
	// UnityEngine.Tilemaps.TileBase.op_Implicit
	// UnityEngine.Tilemaps.TileBase.op_Equality
	// UnityEngine.Tilemaps.TileBase.op_Inequality
	// UnityEngine.Tilemaps.Tilemap.op_Implicit
	// UnityEngine.Tilemaps.Tilemap.op_Equality
	// UnityEngine.Tilemaps.Tilemap.op_Inequality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
	// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
	// UnityEngine.CanvasGroup.op_Implicit
	// UnityEngine.CanvasGroup.op_Equality
	// UnityEngine.CanvasGroup.op_Inequality
	// UnityEngine.CanvasRenderer.op_Implicit
	// UnityEngine.CanvasRenderer.op_Equality
	// UnityEngine.CanvasRenderer.op_Inequality
	// UnityEngine.Canvas.op_Implicit
	// UnityEngine.Canvas.op_Equality
	// UnityEngine.Canvas.op_Inequality
	// UnityEngine.UIElements.PanelSettings.op_Implicit
	// UnityEngine.UIElements.PanelSettings.op_Equality
	// UnityEngine.UIElements.PanelSettings.op_Inequality
	// UnityEngine.UIElements.UIDocument.op_Implicit
	// UnityEngine.UIElements.UIDocument.op_Equality
	// UnityEngine.UIElements.UIDocument.op_Inequality
	// UnityEngine.UIElements.StyleSheet.op_Implicit
	// UnityEngine.UIElements.StyleSheet.op_Equality
	// UnityEngine.UIElements.StyleSheet.op_Inequality
	// UnityEngine.UIElements.ThemeStyleSheet.op_Implicit
	// UnityEngine.UIElements.ThemeStyleSheet.op_Equality
	// UnityEngine.UIElements.ThemeStyleSheet.op_Inequality
	// UnityEngine.UIElements.PanelTextSettings.op_Implicit
	// UnityEngine.UIElements.PanelTextSettings.op_Equality
	// UnityEngine.UIElements.PanelTextSettings.op_Inequality
	// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
	// UnityEngine.UIElements.VisualTreeAsset.op_Equality
	// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
	// UnityEngine.UIElements.VectorImage.op_Implicit
	// UnityEngine.UIElements.VectorImage.op_Equality
	// UnityEngine.UIElements.VectorImage.op_Inequality
	// UnityEngine.WheelCollider.op_Implicit
	// UnityEngine.WheelCollider.op_Equality
	// UnityEngine.WheelCollider.op_Inequality
	// UnityEngine.Video.VideoClip.op_Implicit
	// UnityEngine.Video.VideoClip.op_Equality
	// UnityEngine.Video.VideoClip.op_Inequality
	// UnityEngine.Video.VideoPlayer.op_Implicit
	// UnityEngine.Video.VideoPlayer.op_Equality
	// UnityEngine.Video.VideoPlayer.op_Inequality
	// UnityEngine.WindZone.op_Implicit
	// UnityEngine.WindZone.op_Equality
	// UnityEngine.WindZone.op_Inequality
	// FireworksHandler.op_Implicit
	// FireworksHandler.op_Equality
	// FireworksHandler.op_Inequality
	// PoisonFunction.op_Implicit
	// PoisonFunction.op_Equality
	// PoisonFunction.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_BoolEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_BoolEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_BoolEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_FloatEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_FloatEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_FloatEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_IntEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_IntEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_IntEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_MessageEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_MessageEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_MessageEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_RectEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_RectEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_RectEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2Event.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2Event.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2Event.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3Event.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3Event.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3Event.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_HorizontalAlignmentOptions.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_HorizontalAlignmentOptions.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_HorizontalAlignmentOptions.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TextAlignmentOptions.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TextAlignmentOptions.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TextAlignmentOptions.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Character.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Character.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Character.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_OptionDataList.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_OptionDataList.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_OptionDataList.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_FontWeightPair.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_FontWeightPair.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_FontWeightPair.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_OnChangeEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_OnChangeEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_OnChangeEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SelectionEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SelectionEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SelectionEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SubmitEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SubmitEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SubmitEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteCharacter.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteCharacter.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteCharacter.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteGlyph.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteGlyph.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteGlyph.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Style.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Style.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Style.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_VerticalAlignmentOptions.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_VerticalAlignmentOptions.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_VerticalAlignmentOptions.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEventBase.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEventBase.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEventBase.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_Glyph.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_Glyph.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_Glyph.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphMetrics.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphMetrics.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphMetrics.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphRect.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphRect.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphRect.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_AnimationTriggers.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_AnimationTriggers.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_AnimationTriggers.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ColorBlock.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ColorBlock.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ColorBlock.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_FontData.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_FontData.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_FontData.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_EndEditEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_EndEditEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_EndEditEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_SubmitEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_SubmitEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_SubmitEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Navigation.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Navigation.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Navigation.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Slider_SliderEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Slider_SliderEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Slider_SliderEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_SpriteState.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_SpriteState.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_SpriteState.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2x2.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2x2.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2x2.op_Inequality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_quaternion.op_Implicit
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_quaternion.op_Equality
	// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_quaternion.op_Inequality
	// StudioXP.Scripts.Visuals.LoopingBackground.op_Implicit
	// StudioXP.Scripts.Visuals.LoopingBackground.op_Equality
	// StudioXP.Scripts.Visuals.LoopingBackground.op_Inequality
	// StudioXP.Scripts.Visuals.ParallaxOffset.op_Implicit
	// StudioXP.Scripts.Visuals.ParallaxOffset.op_Equality
	// StudioXP.Scripts.Visuals.ParallaxOffset.op_Inequality
	// StudioXP.Scripts.Visuals.StateMachineBehaviour.SetSpawned.op_Implicit
	// StudioXP.Scripts.Visuals.StateMachineBehaviour.SetSpawned.op_Equality
	// StudioXP.Scripts.Visuals.StateMachineBehaviour.SetSpawned.op_Inequality
	// StudioXP.Scripts.Utils.CoroutineInvoker.op_Implicit
	// StudioXP.Scripts.Utils.CoroutineInvoker.op_Equality
	// StudioXP.Scripts.Utils.CoroutineInvoker.op_Inequality
	// StudioXP.Scripts.Utils.DeactivateOnStart.op_Implicit
	// StudioXP.Scripts.Utils.DeactivateOnStart.op_Equality
	// StudioXP.Scripts.Utils.DeactivateOnStart.op_Inequality
	// StudioXP.Scripts.Utils.DebugValue.op_Implicit
	// StudioXP.Scripts.Utils.DebugValue.op_Equality
	// StudioXP.Scripts.Utils.DebugValue.op_Inequality
	// StudioXP.Scripts.Utils.KeepAliveBetweenScenes.op_Implicit
	// StudioXP.Scripts.Utils.KeepAliveBetweenScenes.op_Equality
	// StudioXP.Scripts.Utils.KeepAliveBetweenScenes.op_Inequality
	// StudioXP.Scripts.Utils.SceneBuilder.op_Implicit
	// StudioXP.Scripts.Utils.SceneBuilder.op_Equality
	// StudioXP.Scripts.Utils.SceneBuilder.op_Inequality
	// StudioXP.Scripts.Utils.SceneConfiguration.op_Implicit
	// StudioXP.Scripts.Utils.SceneConfiguration.op_Equality
	// StudioXP.Scripts.Utils.SceneConfiguration.op_Inequality
	// StudioXP.Scripts.UI.GameController.op_Implicit
	// StudioXP.Scripts.UI.GameController.op_Equality
	// StudioXP.Scripts.UI.GameController.op_Inequality
	// StudioXP.Scripts.UI.HealthUI.op_Implicit
	// StudioXP.Scripts.UI.HealthUI.op_Equality
	// StudioXP.Scripts.UI.HealthUI.op_Inequality
	// StudioXP.Scripts.UI.ItemUI.op_Implicit
	// StudioXP.Scripts.UI.ItemUI.op_Equality
	// StudioXP.Scripts.UI.ItemUI.op_Inequality
	// StudioXP.Scripts.UI.MenuController.op_Implicit
	// StudioXP.Scripts.UI.MenuController.op_Equality
	// StudioXP.Scripts.UI.MenuController.op_Inequality
	// StudioXP.Scripts.Registries.GroupRegistry.op_Implicit
	// StudioXP.Scripts.Registries.GroupRegistry.op_Equality
	// StudioXP.Scripts.Registries.GroupRegistry.op_Inequality
	// StudioXP.Scripts.Registries.ItemRegistry.op_Implicit
	// StudioXP.Scripts.Registries.ItemRegistry.op_Equality
	// StudioXP.Scripts.Registries.ItemRegistry.op_Inequality
	// StudioXP.Scripts.Registries.MessageRegistry.op_Implicit
	// StudioXP.Scripts.Registries.MessageRegistry.op_Equality
	// StudioXP.Scripts.Registries.MessageRegistry.op_Inequality
	// StudioXP.Scripts.Registries.MovementRegistry.op_Implicit
	// StudioXP.Scripts.Registries.MovementRegistry.op_Equality
	// StudioXP.Scripts.Registries.MovementRegistry.op_Inequality
	// StudioXP.Scripts.Registries.SoundRegistry.op_Implicit
	// StudioXP.Scripts.Registries.SoundRegistry.op_Equality
	// StudioXP.Scripts.Registries.SoundRegistry.op_Inequality
	// StudioXP.Scripts.Game.CameraBounds.op_Implicit
	// StudioXP.Scripts.Game.CameraBounds.op_Equality
	// StudioXP.Scripts.Game.CameraBounds.op_Inequality
	// StudioXP.Scripts.Game.Checkpoint.op_Implicit
	// StudioXP.Scripts.Game.Checkpoint.op_Equality
	// StudioXP.Scripts.Game.Checkpoint.op_Inequality
	// StudioXP.Scripts.Game.GameConfiguration.op_Implicit
	// StudioXP.Scripts.Game.GameConfiguration.op_Equality
	// StudioXP.Scripts.Game.GameConfiguration.op_Inequality
	// StudioXP.Scripts.Game.GameData.op_Implicit
	// StudioXP.Scripts.Game.GameData.op_Equality
	// StudioXP.Scripts.Game.GameData.op_Inequality
	// StudioXP.Scripts.Game.KillZone.op_Implicit
	// StudioXP.Scripts.Game.KillZone.op_Equality
	// StudioXP.Scripts.Game.KillZone.op_Inequality
	// StudioXP.Scripts.Game.RestrictionBounds.op_Implicit
	// StudioXP.Scripts.Game.RestrictionBounds.op_Equality
	// StudioXP.Scripts.Game.RestrictionBounds.op_Inequality
	// StudioXP.Scripts.Events.AnimationEvent.op_Implicit
	// StudioXP.Scripts.Events.AnimationEvent.op_Equality
	// StudioXP.Scripts.Events.AnimationEvent.op_Inequality
	// StudioXP.Scripts.Events.Animation.DeactivateParent.op_Implicit
	// StudioXP.Scripts.Events.Animation.DeactivateParent.op_Equality
	// StudioXP.Scripts.Events.Animation.DeactivateParent.op_Inequality
	// StudioXP.Scripts.Events.Animation.DestroyParent.op_Implicit
	// StudioXP.Scripts.Events.Animation.DestroyParent.op_Equality
	// StudioXP.Scripts.Events.Animation.DestroyParent.op_Inequality
	// StudioXP.Scripts.Events.Animation.ReplaceParent.op_Implicit
	// StudioXP.Scripts.Events.Animation.ReplaceParent.op_Equality
	// StudioXP.Scripts.Events.Animation.ReplaceParent.op_Inequality
	// StudioXP.Scripts.Components.SXPMonobehaviour.op_Implicit
	// StudioXP.Scripts.Components.SXPMonobehaviour.op_Equality
	// StudioXP.Scripts.Components.SXPMonobehaviour.op_Inequality
	// StudioXP.Scripts.Components.Traps.FlameThrowerFunction.op_Implicit
	// StudioXP.Scripts.Components.Traps.FlameThrowerFunction.op_Equality
	// StudioXP.Scripts.Components.Traps.FlameThrowerFunction.op_Inequality
	// StudioXP.Scripts.Components.Traps.HiddenSpikesFunction.op_Implicit
	// StudioXP.Scripts.Components.Traps.HiddenSpikesFunction.op_Equality
	// StudioXP.Scripts.Components.Traps.HiddenSpikesFunction.op_Inequality
	// StudioXP.Scripts.Components.Sprites.ExtendableSprite.op_Implicit
	// StudioXP.Scripts.Components.Sprites.ExtendableSprite.op_Equality
	// StudioXP.Scripts.Components.Sprites.ExtendableSprite.op_Inequality
	// StudioXP.Scripts.Components.Sprites.SpringSprite.op_Implicit
	// StudioXP.Scripts.Components.Sprites.SpringSprite.op_Equality
	// StudioXP.Scripts.Components.Sprites.SpringSprite.op_Inequality
	// StudioXP.Scripts.Components.Objects.Collectable.op_Implicit
	// StudioXP.Scripts.Components.Objects.Collectable.op_Equality
	// StudioXP.Scripts.Components.Objects.Collectable.op_Inequality
	// StudioXP.Scripts.Components.Objects.DamageEntity.op_Implicit
	// StudioXP.Scripts.Components.Objects.DamageEntity.op_Equality
	// StudioXP.Scripts.Components.Objects.DamageEntity.op_Inequality
	// StudioXP.Scripts.Components.Objects.DestroyParentOnTrigger.op_Implicit
	// StudioXP.Scripts.Components.Objects.DestroyParentOnTrigger.op_Equality
	// StudioXP.Scripts.Components.Objects.DestroyParentOnTrigger.op_Inequality
	// StudioXP.Scripts.Components.Objects.Door.op_Implicit
	// StudioXP.Scripts.Components.Objects.Door.op_Equality
	// StudioXP.Scripts.Components.Objects.Door.op_Inequality
	// StudioXP.Scripts.Components.Objects.FireBarTrigger.op_Implicit
	// StudioXP.Scripts.Components.Objects.FireBarTrigger.op_Equality
	// StudioXP.Scripts.Components.Objects.FireBarTrigger.op_Inequality
	// StudioXP.Scripts.Components.Objects.LadderTrigger.op_Implicit
	// StudioXP.Scripts.Components.Objects.LadderTrigger.op_Equality
	// StudioXP.Scripts.Components.Objects.LadderTrigger.op_Inequality
	// StudioXP.Scripts.Components.Objects.PickableObject.op_Implicit
	// StudioXP.Scripts.Components.Objects.PickableObject.op_Equality
	// StudioXP.Scripts.Components.Objects.PickableObject.op_Inequality
	// StudioXP.Scripts.Components.Objects.PlatformCollider.op_Implicit
	// StudioXP.Scripts.Components.Objects.PlatformCollider.op_Equality
	// StudioXP.Scripts.Components.Objects.PlatformCollider.op_Inequality
	// StudioXP.Scripts.Components.Objects.PushableObject.op_Implicit
	// StudioXP.Scripts.Components.Objects.PushableObject.op_Equality
	// StudioXP.Scripts.Components.Objects.PushableObject.op_Inequality
	// StudioXP.Scripts.Components.Objects.TimerEvent.op_Implicit
	// StudioXP.Scripts.Components.Objects.TimerEvent.op_Equality
	// StudioXP.Scripts.Components.Objects.TimerEvent.op_Inequality
	// StudioXP.Scripts.Components.Objects.TriggerEvent.op_Implicit
	// StudioXP.Scripts.Components.Objects.TriggerEvent.op_Equality
	// StudioXP.Scripts.Components.Objects.TriggerEvent.op_Inequality
	// StudioXP.Scripts.Components.Movements.Simple.MoveLinear.op_Implicit
	// StudioXP.Scripts.Components.Movements.Simple.MoveLinear.op_Equality
	// StudioXP.Scripts.Components.Movements.Simple.MoveLinear.op_Inequality
	// StudioXP.Scripts.Components.Movements.Simple.MoveSinusoidal.op_Implicit
	// StudioXP.Scripts.Components.Movements.Simple.MoveSinusoidal.op_Equality
	// StudioXP.Scripts.Components.Movements.Simple.MoveSinusoidal.op_Inequality
	// StudioXP.Scripts.Components.Movements.Platforms.BalancingAuto.op_Implicit
	// StudioXP.Scripts.Components.Movements.Platforms.BalancingAuto.op_Equality
	// StudioXP.Scripts.Components.Movements.Platforms.BalancingAuto.op_Inequality
	// StudioXP.Scripts.Components.Movements.Platforms.FallingFunction.op_Implicit
	// StudioXP.Scripts.Components.Movements.Platforms.FallingFunction.op_Equality
	// StudioXP.Scripts.Components.Movements.Platforms.FallingFunction.op_Inequality
	// StudioXP.Scripts.Components.Movements.Platforms.MoveLimitAuto.op_Implicit
	// StudioXP.Scripts.Components.Movements.Platforms.MoveLimitAuto.op_Equality
	// StudioXP.Scripts.Components.Movements.Platforms.MoveLimitAuto.op_Inequality
	// StudioXP.Scripts.Components.Movements.Platforms.RotationAuto.op_Implicit
	// StudioXP.Scripts.Components.Movements.Platforms.RotationAuto.op_Equality
	// StudioXP.Scripts.Components.Movements.Platforms.RotationAuto.op_Inequality
	// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.op_Implicit
	// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.op_Equality
	// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.op_Inequality
	// StudioXP.Scripts.Components.Movements.Characters.FollowTargetAuto.op_Implicit
	// StudioXP.Scripts.Components.Movements.Characters.FollowTargetAuto.op_Equality
	// StudioXP.Scripts.Components.Movements.Characters.FollowTargetAuto.op_Inequality
	// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.op_Implicit
	// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.op_Equality
	// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.op_Inequality
	// StudioXP.Scripts.Components.Movements.Characters.MoveFunction.op_Implicit
	// StudioXP.Scripts.Components.Movements.Characters.MoveFunction.op_Equality
	// StudioXP.Scripts.Components.Movements.Characters.MoveFunction.op_Inequality
	// StudioXP.Scripts.Components.Movements.Characters.PushFunction.op_Implicit
	// StudioXP.Scripts.Components.Movements.Characters.PushFunction.op_Equality
	// StudioXP.Scripts.Components.Movements.Characters.PushFunction.op_Inequality
	// StudioXP.Scripts.Components.Movements.Characters.RunFunction.op_Implicit
	// StudioXP.Scripts.Components.Movements.Characters.RunFunction.op_Equality
	// StudioXP.Scripts.Components.Movements.Characters.RunFunction.op_Inequality
	// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.op_Implicit
	// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.op_Equality
	// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.op_Inequality
	// StudioXP.Scripts.Components.Movements.Camera.FollowTargetSmoothAuto.op_Implicit
	// StudioXP.Scripts.Components.Movements.Camera.FollowTargetSmoothAuto.op_Equality
	// StudioXP.Scripts.Components.Movements.Camera.FollowTargetSmoothAuto.op_Inequality
	// StudioXP.Scripts.Components.Handlers.AnimatorHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.AnimatorHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.AnimatorHandler.op_Inequality
	// StudioXP.Scripts.Components.Handlers.AudioHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.AudioHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.AudioHandler.op_Inequality
	// StudioXP.Scripts.Components.Handlers.ColliderHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.ColliderHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.ColliderHandler.op_Inequality
	// StudioXP.Scripts.Components.Handlers.InputHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.InputHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.InputHandler.op_Inequality
	// StudioXP.Scripts.Components.Handlers.InputStateHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.InputStateHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.InputStateHandler.op_Inequality
	// StudioXP.Scripts.Components.Handlers.MessageHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.MessageHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.MessageHandler.op_Inequality
	// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.op_Inequality
	// StudioXP.Scripts.Components.Handlers.SpriteRendererHandler.op_Implicit
	// StudioXP.Scripts.Components.Handlers.SpriteRendererHandler.op_Equality
	// StudioXP.Scripts.Components.Handlers.SpriteRendererHandler.op_Inequality
	// StudioXP.Scripts.Components.Functions.AddForceFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.AddForceFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.AddForceFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.BooleanGateFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.BooleanGateFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.BooleanGateFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.BounceFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.BounceFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.BounceFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.ChangeLevelFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.ChangeLevelFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.ChangeLevelFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.ChangePositionFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.ChangePositionFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.ChangePositionFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.ChangeSpriteFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.ChangeSpriteFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.ChangeSpriteFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.CounterFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.CounterFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.CounterFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.EventFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.EventFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.EventFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.FlipFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.FlipFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.FlipFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.FloatingFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.FloatingFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.FloatingFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.GeneratorFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.GeneratorFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.GeneratorFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.LoopFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.LoopFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.LoopFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.MenuFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.MenuFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.MenuFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.ParentTargetFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.ParentTargetFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.ParentTargetFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.PickUpFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.PickUpFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.PickUpFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.ReceiveFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.ReceiveFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.ReceiveFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.RespawnFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.RespawnFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.RespawnFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.SendFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.SendFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.SendFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.SpawnFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.SpawnFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.SpawnFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.TimerFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.TimerFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.TimerFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.ToggleFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.ToggleFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.ToggleFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.AmbientHandler.op_Implicit
	// StudioXP.Scripts.Components.Functions.AmbientHandler.op_Equality
	// StudioXP.Scripts.Components.Functions.AmbientHandler.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.AngryBlushyFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.AngryBlushyFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.AngryBlushyFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.AppearIfPlayerCloseFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.AppearIfPlayerCloseFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.AppearIfPlayerCloseFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStartFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStartFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStartFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStopFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStopFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStopFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.ExplosiveEnemyFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.ExplosiveEnemyFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.ExplosiveEnemyFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.GhostStopFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.GhostStopFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.GhostStopFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.HatFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.HatFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.HatFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.ManyWeakPointsFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.ManyWeakPointsFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.ManyWeakPointsFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.WeakPointFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.WeakPointFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.WeakPointFunction.op_Inequality
	// StudioXP.Scripts.Components.Functions.Enemies.WingsFunction.op_Implicit
	// StudioXP.Scripts.Components.Functions.Enemies.WingsFunction.op_Equality
	// StudioXP.Scripts.Components.Functions.Enemies.WingsFunction.op_Inequality
	// StudioXP.Scripts.Components.Common.CollisionInfoValue.op_Implicit
	// StudioXP.Scripts.Components.Common.CollisionInfoValue.op_Equality
	// StudioXP.Scripts.Components.Common.CollisionInfoValue.op_Inequality
	// StudioXP.Scripts.Components.Common.GroupList.op_Implicit
	// StudioXP.Scripts.Components.Common.GroupList.op_Equality
	// StudioXP.Scripts.Components.Common.GroupList.op_Inequality
	// StudioXP.Scripts.Components.Common.Spawnable.op_Implicit
	// StudioXP.Scripts.Components.Common.Spawnable.op_Equality
	// StudioXP.Scripts.Components.Common.Spawnable.op_Inequality
	// StudioXP.Scripts.Components.AI.BossStateSystem.op_Implicit
	// StudioXP.Scripts.Components.AI.BossStateSystem.op_Equality
	// StudioXP.Scripts.Components.AI.BossStateSystem.op_Inequality
	// StudioXP.Scripts.Components.AI.GenerateAndThrowAtTargetAI.op_Implicit
	// StudioXP.Scripts.Components.AI.GenerateAndThrowAtTargetAI.op_Equality
	// StudioXP.Scripts.Components.AI.GenerateAndThrowAtTargetAI.op_Inequality
	// StudioXP.Scripts.Components.AI.GenerateCanonBallAI.op_Implicit
	// StudioXP.Scripts.Components.AI.GenerateCanonBallAI.op_Equality
	// StudioXP.Scripts.Components.AI.GenerateCanonBallAI.op_Inequality
	// StudioXP.Scripts.Components.AI.GhostFollowerAI.op_Implicit
	// StudioXP.Scripts.Components.AI.GhostFollowerAI.op_Equality
	// StudioXP.Scripts.Components.AI.GhostFollowerAI.op_Inequality
	// StudioXP.Scripts.Components.AI.HatCherryAI.op_Implicit
	// StudioXP.Scripts.Components.AI.HatCherryAI.op_Equality
	// StudioXP.Scripts.Components.AI.HatCherryAI.op_Inequality
	// StudioXP.Scripts.Components.AI.PassiveWalkAI.op_Implicit
	// StudioXP.Scripts.Components.AI.PassiveWalkAI.op_Equality
	// StudioXP.Scripts.Components.AI.PassiveWalkAI.op_Inequality
	// StudioXP.Scripts.Components.AI.SkeletonAI.op_Implicit
	// StudioXP.Scripts.Components.AI.SkeletonAI.op_Equality
	// StudioXP.Scripts.Components.AI.SkeletonAI.op_Inequality
	// StudioXP.Scripts.Components.AI.WalkTowardsPlayerAI.op_Implicit
	// StudioXP.Scripts.Components.AI.WalkTowardsPlayerAI.op_Equality
	// StudioXP.Scripts.Components.AI.WalkTowardsPlayerAI.op_Inequality
	// TimelinePreferences.op_Implicit
	// TimelinePreferences.op_Equality
	// TimelinePreferences.op_Inequality
	// TimelineProjectSettings.op_Implicit
	// TimelineProjectSettings.op_Equality
	// TimelineProjectSettings.op_Inequality
	// Unity.VisualScripting.AnimatorMessageListener.op_Implicit
	// Unity.VisualScripting.AnimatorMessageListener.op_Equality
	// Unity.VisualScripting.AnimatorMessageListener.op_Inequality
	// Unity.VisualScripting.LudiqBehaviour.op_Implicit
	// Unity.VisualScripting.LudiqBehaviour.op_Equality
	// Unity.VisualScripting.LudiqBehaviour.op_Inequality
	// Unity.VisualScripting.LudiqScriptableObject.op_Implicit
	// Unity.VisualScripting.LudiqScriptableObject.op_Equality
	// Unity.VisualScripting.LudiqScriptableObject.op_Inequality
	// Unity.VisualScripting.MacroScriptableObject.op_Implicit
	// Unity.VisualScripting.MacroScriptableObject.op_Equality
	// Unity.VisualScripting.MacroScriptableObject.op_Inequality
	// Unity.VisualScripting.ScriptGraphAsset.op_Implicit
	// Unity.VisualScripting.ScriptGraphAsset.op_Equality
	// Unity.VisualScripting.ScriptGraphAsset.op_Inequality
	// Unity.VisualScripting.ScriptMachine.op_Implicit
	// Unity.VisualScripting.ScriptMachine.op_Equality
	// Unity.VisualScripting.ScriptMachine.op_Inequality
	// UnityEngine.UI.Button.op_Implicit
	// UnityEngine.UI.Button.op_Equality
	// UnityEngine.UI.Button.op_Inequality
	// UnityEngine.UI.Dropdown.op_Implicit
	// UnityEngine.UI.Dropdown.op_Equality
	// UnityEngine.UI.Dropdown.op_Inequality
	// UnityEngine.UI.Graphic.op_Implicit
	// UnityEngine.UI.Graphic.op_Equality
	// UnityEngine.UI.Graphic.op_Inequality
	// UnityEngine.UI.GraphicRaycaster.op_Implicit
	// UnityEngine.UI.GraphicRaycaster.op_Equality
	// UnityEngine.UI.GraphicRaycaster.op_Inequality
	// UnityEngine.UI.Image.op_Implicit
	// UnityEngine.UI.Image.op_Equality
	// UnityEngine.UI.Image.op_Inequality
	// UnityEngine.UI.InputField.op_Implicit
	// UnityEngine.UI.InputField.op_Equality
	// UnityEngine.UI.InputField.op_Inequality
	// UnityEngine.UI.AspectRatioFitter.op_Implicit
	// UnityEngine.UI.AspectRatioFitter.op_Equality
	// UnityEngine.UI.AspectRatioFitter.op_Inequality
	// UnityEngine.UI.CanvasScaler.op_Implicit
	// UnityEngine.UI.CanvasScaler.op_Equality
	// UnityEngine.UI.CanvasScaler.op_Inequality
	// UnityEngine.UI.ContentSizeFitter.op_Implicit
	// UnityEngine.UI.ContentSizeFitter.op_Equality
	// UnityEngine.UI.ContentSizeFitter.op_Inequality
	// UnityEngine.UI.GridLayoutGroup.op_Implicit
	// UnityEngine.UI.GridLayoutGroup.op_Equality
	// UnityEngine.UI.GridLayoutGroup.op_Inequality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
	// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
	// UnityEngine.UI.HorizontalOrVerticalLayoutGroup.op_Implicit
	// UnityEngine.UI.HorizontalOrVerticalLayoutGroup.op_Equality
	// UnityEngine.UI.HorizontalOrVerticalLayoutGroup.op_Inequality
	// UnityEngine.UI.LayoutElement.op_Implicit
	// UnityEngine.UI.LayoutElement.op_Equality
	// UnityEngine.UI.LayoutElement.op_Inequality
	// UnityEngine.UI.LayoutGroup.op_Implicit
	// UnityEngine.UI.LayoutGroup.op_Equality
	// UnityEngine.UI.LayoutGroup.op_Inequality
	// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
	// UnityEngine.UI.VerticalLayoutGroup.op_Equality
	// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
	// UnityEngine.UI.Mask.op_Implicit
	// UnityEngine.UI.Mask.op_Equality
	// UnityEngine.UI.Mask.op_Inequality
	// UnityEngine.UI.MaskableGraphic.op_Implicit
	// UnityEngine.UI.MaskableGraphic.op_Equality
	// UnityEngine.UI.MaskableGraphic.op_Inequality
	// UnityEngine.UI.RawImage.op_Implicit
	// UnityEngine.UI.RawImage.op_Equality
	// UnityEngine.UI.RawImage.op_Inequality
	// UnityEngine.UI.RectMask2D.op_Implicit
	// UnityEngine.UI.RectMask2D.op_Equality
	// UnityEngine.UI.RectMask2D.op_Inequality
	// UnityEngine.UI.Scrollbar.op_Implicit
	// UnityEngine.UI.Scrollbar.op_Equality
	// UnityEngine.UI.Scrollbar.op_Inequality
	// UnityEngine.UI.ScrollRect.op_Implicit
	// UnityEngine.UI.ScrollRect.op_Equality
	// UnityEngine.UI.ScrollRect.op_Inequality
	// UnityEngine.UI.Selectable.op_Implicit
	// UnityEngine.UI.Selectable.op_Equality
	// UnityEngine.UI.Selectable.op_Inequality
	// UnityEngine.UI.Slider.op_Implicit
	// UnityEngine.UI.Slider.op_Equality
	// UnityEngine.UI.Slider.op_Inequality
	// UnityEngine.UI.Text.op_Implicit
	// UnityEngine.UI.Text.op_Equality
	// UnityEngine.UI.Text.op_Inequality
	// UnityEngine.UI.Toggle.op_Implicit
	// UnityEngine.UI.Toggle.op_Equality
	// UnityEngine.UI.Toggle.op_Inequality
	// UnityEngine.UI.ToggleGroup.op_Implicit
	// UnityEngine.UI.ToggleGroup.op_Equality
	// UnityEngine.UI.ToggleGroup.op_Inequality
	// UnityEngine.UI.BaseMeshEffect.op_Implicit
	// UnityEngine.UI.BaseMeshEffect.op_Equality
	// UnityEngine.UI.BaseMeshEffect.op_Inequality
	// UnityEngine.UI.Outline.op_Implicit
	// UnityEngine.UI.Outline.op_Equality
	// UnityEngine.UI.Outline.op_Inequality
	// UnityEngine.UI.PositionAsUV1.op_Implicit
	// UnityEngine.UI.PositionAsUV1.op_Equality
	// UnityEngine.UI.PositionAsUV1.op_Inequality
	// UnityEngine.UI.Shadow.op_Implicit
	// UnityEngine.UI.Shadow.op_Equality
	// UnityEngine.UI.Shadow.op_Inequality
	// UnityEngine.UIElements.PanelEventHandler.op_Implicit
	// UnityEngine.UIElements.PanelEventHandler.op_Equality
	// UnityEngine.UIElements.PanelEventHandler.op_Inequality
	// UnityEngine.UIElements.PanelRaycaster.op_Implicit
	// UnityEngine.UIElements.PanelRaycaster.op_Equality
	// UnityEngine.UIElements.PanelRaycaster.op_Inequality
	// UnityEngine.EventSystems.EventSystem.op_Implicit
	// UnityEngine.EventSystems.EventSystem.op_Equality
	// UnityEngine.EventSystems.EventSystem.op_Inequality
	// UnityEngine.EventSystems.EventTrigger.op_Implicit
	// UnityEngine.EventSystems.EventTrigger.op_Equality
	// UnityEngine.EventSystems.EventTrigger.op_Inequality
	// UnityEngine.EventSystems.BaseInput.op_Implicit
	// UnityEngine.EventSystems.BaseInput.op_Equality
	// UnityEngine.EventSystems.BaseInput.op_Inequality
	// UnityEngine.EventSystems.BaseInputModule.op_Implicit
	// UnityEngine.EventSystems.BaseInputModule.op_Equality
	// UnityEngine.EventSystems.BaseInputModule.op_Inequality
	// UnityEngine.EventSystems.PointerInputModule.op_Implicit
	// UnityEngine.EventSystems.PointerInputModule.op_Equality
	// UnityEngine.EventSystems.PointerInputModule.op_Inequality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
	// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
	// UnityEngine.EventSystems.BaseRaycaster.op_Implicit
	// UnityEngine.EventSystems.BaseRaycaster.op_Equality
	// UnityEngine.EventSystems.BaseRaycaster.op_Inequality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
	// UnityEngine.EventSystems.UIBehaviour.op_Implicit
	// UnityEngine.EventSystems.UIBehaviour.op_Equality
	// UnityEngine.EventSystems.UIBehaviour.op_Inequality
	// UnityEngine.Timeline.ActivationTrack.op_Implicit
	// UnityEngine.Timeline.ActivationTrack.op_Equality
	// UnityEngine.Timeline.ActivationTrack.op_Inequality
	// UnityEngine.Timeline.AnimationPlayableAsset.op_Implicit
	// UnityEngine.Timeline.AnimationPlayableAsset.op_Equality
	// UnityEngine.Timeline.AnimationPlayableAsset.op_Inequality
	// UnityEngine.Timeline.AnimationTrack.op_Implicit
	// UnityEngine.Timeline.AnimationTrack.op_Equality
	// UnityEngine.Timeline.AnimationTrack.op_Inequality
	// UnityEngine.Timeline.TimelineAsset.op_Implicit
	// UnityEngine.Timeline.TimelineAsset.op_Equality
	// UnityEngine.Timeline.TimelineAsset.op_Inequality
	// UnityEngine.Timeline.TrackAsset.op_Implicit
	// UnityEngine.Timeline.TrackAsset.op_Equality
	// UnityEngine.Timeline.TrackAsset.op_Inequality
	// UnityEngine.Timeline.AudioPlayableAsset.op_Implicit
	// UnityEngine.Timeline.AudioPlayableAsset.op_Equality
	// UnityEngine.Timeline.AudioPlayableAsset.op_Inequality
	// UnityEngine.Timeline.AudioTrack.op_Implicit
	// UnityEngine.Timeline.AudioTrack.op_Equality
	// UnityEngine.Timeline.AudioTrack.op_Inequality
	// UnityEngine.Timeline.ControlPlayableAsset.op_Implicit
	// UnityEngine.Timeline.ControlPlayableAsset.op_Equality
	// UnityEngine.Timeline.ControlPlayableAsset.op_Inequality
	// UnityEngine.Timeline.ControlTrack.op_Implicit
	// UnityEngine.Timeline.ControlTrack.op_Equality
	// UnityEngine.Timeline.ControlTrack.op_Inequality
	// UnityEngine.Timeline.Marker.op_Implicit
	// UnityEngine.Timeline.Marker.op_Equality
	// UnityEngine.Timeline.Marker.op_Inequality
	// UnityEngine.Timeline.MarkerTrack.op_Implicit
	// UnityEngine.Timeline.MarkerTrack.op_Equality
	// UnityEngine.Timeline.MarkerTrack.op_Inequality
	// UnityEngine.Timeline.SignalAsset.op_Implicit
	// UnityEngine.Timeline.SignalAsset.op_Equality
	// UnityEngine.Timeline.SignalAsset.op_Inequality
	// UnityEngine.Timeline.SignalEmitter.op_Implicit
	// UnityEngine.Timeline.SignalEmitter.op_Equality
	// UnityEngine.Timeline.SignalEmitter.op_Inequality
	// UnityEngine.Timeline.SignalReceiver.op_Implicit
	// UnityEngine.Timeline.SignalReceiver.op_Equality
	// UnityEngine.Timeline.SignalReceiver.op_Inequality
	// UnityEngine.Timeline.SignalTrack.op_Implicit
	// UnityEngine.Timeline.SignalTrack.op_Equality
	// UnityEngine.Timeline.SignalTrack.op_Inequality
	// UnityEngine.Timeline.GroupTrack.op_Implicit
	// UnityEngine.Timeline.GroupTrack.op_Equality
	// UnityEngine.Timeline.GroupTrack.op_Inequality
	// UnityEngine.Timeline.PlayableTrack.op_Implicit
	// UnityEngine.Timeline.PlayableTrack.op_Equality
	// UnityEngine.Timeline.PlayableTrack.op_Inequality
	// TMPro.TextContainer.op_Implicit
	// TMPro.TextContainer.op_Equality
	// TMPro.TextContainer.op_Inequality
	// TMPro.TextMeshPro.op_Implicit
	// TMPro.TextMeshPro.op_Equality
	// TMPro.TextMeshPro.op_Inequality
	// TMPro.TextMeshProUGUI.op_Implicit
	// TMPro.TextMeshProUGUI.op_Equality
	// TMPro.TextMeshProUGUI.op_Inequality
	// TMPro.TMP_Asset.op_Implicit
	// TMPro.TMP_Asset.op_Equality
	// TMPro.TMP_Asset.op_Inequality
	// TMPro.TMP_ColorGradient.op_Implicit
	// TMPro.TMP_ColorGradient.op_Equality
	// TMPro.TMP_ColorGradient.op_Inequality
	// TMPro.TMP_Dropdown.op_Implicit
	// TMPro.TMP_Dropdown.op_Equality
	// TMPro.TMP_Dropdown.op_Inequality
	// TMPro.TMP_FontAsset.op_Implicit
	// TMPro.TMP_FontAsset.op_Equality
	// TMPro.TMP_FontAsset.op_Inequality
	// TMPro.TMP_InputField.op_Implicit
	// TMPro.TMP_InputField.op_Equality
	// TMPro.TMP_InputField.op_Inequality
	// TMPro.TMP_InputValidator.op_Implicit
	// TMPro.TMP_InputValidator.op_Equality
	// TMPro.TMP_InputValidator.op_Inequality
	// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
	// TMPro.TMP_PackageResourceImporterWindow.op_Equality
	// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
	// TMPro.TMP_ScrollbarEventHandler.op_Implicit
	// TMPro.TMP_ScrollbarEventHandler.op_Equality
	// TMPro.TMP_ScrollbarEventHandler.op_Inequality
	// TMPro.TMP_SelectionCaret.op_Implicit
	// TMPro.TMP_SelectionCaret.op_Equality
	// TMPro.TMP_SelectionCaret.op_Inequality
	// TMPro.TMP_Settings.op_Implicit
	// TMPro.TMP_Settings.op_Equality
	// TMPro.TMP_Settings.op_Inequality
	// TMPro.TMP_SpriteAnimator.op_Implicit
	// TMPro.TMP_SpriteAnimator.op_Equality
	// TMPro.TMP_SpriteAnimator.op_Inequality
	// TMPro.TMP_SpriteAsset.op_Implicit
	// TMPro.TMP_SpriteAsset.op_Equality
	// TMPro.TMP_SpriteAsset.op_Inequality
	// TMPro.TMP_StyleSheet.op_Implicit
	// TMPro.TMP_StyleSheet.op_Equality
	// TMPro.TMP_StyleSheet.op_Inequality
	// TMPro.TMP_SubMesh.op_Implicit
	// TMPro.TMP_SubMesh.op_Equality
	// TMPro.TMP_SubMesh.op_Inequality
	// TMPro.TMP_SubMeshUI.op_Implicit
	// TMPro.TMP_SubMeshUI.op_Equality
	// TMPro.TMP_SubMeshUI.op_Inequality
	// TMPro.TMP_Text.op_Implicit
	// TMPro.TMP_Text.op_Equality
	// TMPro.TMP_Text.op_Inequality
	// Unity.VisualScripting.StateGraphAsset.op_Implicit
	// Unity.VisualScripting.StateGraphAsset.op_Equality
	// Unity.VisualScripting.StateGraphAsset.op_Inequality
	// Unity.VisualScripting.StateMachine.op_Implicit
	// Unity.VisualScripting.StateMachine.op_Equality
	// Unity.VisualScripting.StateMachine.op_Inequality
	// --------------- Plugin Stubs
	// --------------- Asset Stubs
	// StudioXP.Scripts.Components.Movements.Characters.RunFunction.RunStop
	// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.Walk
	// StudioXP.Scripts.Components.Movements.Characters.RunFunction.RunStart
	// UnityEngine.Input.GetAxis
	// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.JumpStart
	// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.JumpStay
	// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.JumpStop
	// StudioXP.Scripts.Components.Functions.SendFunction.SendToLastCollision
	// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.ForceJumpStart
	// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.MoveHorizontal
	// UnityEngine.Animator.SetBool
	// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.FreezePosition
	// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.MoveVertical
	// --------------- Scene Stubs
	// --------------- Scene Stubs
	// UnityEngine.GameObject..ctor
	// UnityEngine.SpriteRenderer..ctor
	// --------------- Scene Stubs
	// --------------- Scene Stubs
	// --------------- Scene Stubs
	// --------------- Scene Stubs
	// --------------- Scene Stubs
	// --------------- Scene Stubs
	[UnityEngine.Scripting.PreserveAttribute()]
	public class AotStubs
	{
		
		// string.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Equality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Inequality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Equality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Inequality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 < arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 > arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 <= arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 >= arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.StateMachineBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_StateMachineBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.StateMachineBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_StateMachineBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.StateMachineBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_StateMachineBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Equality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Inequality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Inequality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Equality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Addition()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Subtraction()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_0()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Division()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Equality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Inequality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Color conversion = ((UnityEngine.Color)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			UnityEngine.Matrix4x4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply_0()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Equality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Inequality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Addition()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Subtraction()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_UnaryNegation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Division()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Equality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Inequality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			UnityEngine.Quaternion @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply_0()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Equality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Inequality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Addition()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Subtraction()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_UnaryNegation()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Equality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Inequality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector2 conversion = ((UnityEngine.Vector2)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Addition()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 + arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Subtraction()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 - arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_UnaryNegation()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Division()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 / arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Equality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Inequality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_1()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit()
		{
			global::UnityEngine.LayerMask arg0 = default(global::UnityEngine.LayerMask);
			int conversion = ((int)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.LayerMask, int> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.LayerMask, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit_0()
		{
			int arg0 = default(int);
			UnityEngine.LayerMask conversion = ((UnityEngine.LayerMask)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<int, UnityEngine.LayerMask> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<int, UnityEngine.LayerMask>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.Light2DBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_Light2DBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.Light2DBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_Light2DBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.Light2DBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_Light2DBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Equality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Inequality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.RenderPipelineAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_RenderPipelineAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.RenderPipelineAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_RenderPipelineAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.RenderPipelineAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_RenderPipelineAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.RenderPipelineGlobalSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_RenderPipelineGlobalSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.RenderPipelineGlobalSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_RenderPipelineGlobalSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.RenderPipelineGlobalSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_RenderPipelineGlobalSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ArticulationBody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ArticulationBody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RaycastHit2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit2D_op_Implicit()
		{
			global::UnityEngine.RaycastHit2D arg0 = default(global::UnityEngine.RaycastHit2D);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GridBrushBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GridBrushBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GridBrushBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GridBrushBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GridBrushBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GridBrushBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TileBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TileBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TileBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TileBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TileBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TileBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.UIDocument.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_UIDocument_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.UIDocument.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_UIDocument_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.UIDocument.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_UIDocument_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.ThemeStyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelTextSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelTextSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelTextSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FireworksHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FireworksHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FireworksHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FireworksHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FireworksHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FireworksHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PoisonFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PoisonFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PoisonFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PoisonFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PoisonFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PoisonFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Components_Common_GroupFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_BoolEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_BoolEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_BoolEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_BoolEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_BoolEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_BoolEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_ColliderEventInfoEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionHEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionHVEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_DirectionVEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_FloatEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_FloatEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_FloatEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_FloatEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_FloatEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_FloatEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_GameObjectDirectionEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_GameObjectEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_IntEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_IntEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_IntEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_IntEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_IntEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_IntEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_MessageEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_MessageEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_MessageEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_MessageEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_MessageEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_MessageEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_RectEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_RectEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_RectEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_RectEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_RectEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_RectEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2Event.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector2Event_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2Event.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector2Event_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2Event.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector2Event_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector2IntEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3Event.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector3Event_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3Event.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector3Event_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3Event.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector3Event_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_StudioXP_Scripts_Events_Vector3IntEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_HorizontalAlignmentOptions.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_HorizontalAlignmentOptions_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_HorizontalAlignmentOptions.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_HorizontalAlignmentOptions_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_HorizontalAlignmentOptions.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_HorizontalAlignmentOptions_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TextAlignmentOptions.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TextAlignmentOptions_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TextAlignmentOptions.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TextAlignmentOptions_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TextAlignmentOptions.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TextAlignmentOptions_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Character.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Character_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Character.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Character_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Character.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Character_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_DropdownEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_OptionDataList.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_OptionDataList_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_OptionDataList.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_OptionDataList_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Dropdown_OptionDataList.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Dropdown_OptionDataList_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_FontWeightPair.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_FontWeightPair_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_FontWeightPair.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_FontWeightPair_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_FontWeightPair.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_FontWeightPair_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_GlyphPairAdjustmentRecord_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_OnChangeEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_OnChangeEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_OnChangeEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_OnChangeEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_OnChangeEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_OnChangeEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SelectionEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SelectionEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SelectionEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SelectionEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SelectionEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SelectionEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SubmitEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SubmitEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SubmitEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SubmitEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_SubmitEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_SubmitEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TextSelectionEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_InputField_TouchScreenKeyboardEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteCharacter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteCharacter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteCharacter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteCharacter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteCharacter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteCharacter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteGlyph.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteGlyph_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteGlyph.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteGlyph_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_SpriteGlyph.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_SpriteGlyph_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Style.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Style_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Style.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Style_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_TMP_Style.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_TMP_Style_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_VerticalAlignmentOptions.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_VerticalAlignmentOptions_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_VerticalAlignmentOptions.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_VerticalAlignmentOptions_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_TMPro_VerticalAlignmentOptions.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_TMPro_VerticalAlignmentOptions_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_EventSystems_EventTrigger_TriggerEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEventBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEventBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEventBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEventBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_Events_UnityEventBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_Events_UnityEventBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxCurve_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_ParticleSystem_MinMaxGradient_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_Glyph.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Glyph_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_Glyph.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Glyph_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_Glyph.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_Glyph_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphMetrics.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphMetrics_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphMetrics.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphMetrics_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphMetrics.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphMetrics_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphRect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphRect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphRect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphRect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_TextCore_GlyphRect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_TextCore_GlyphRect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_AnimationTriggers.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_AnimationTriggers_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_AnimationTriggers.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_AnimationTriggers_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_AnimationTriggers.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_AnimationTriggers_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Button_ButtonClickedEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ColorBlock.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ColorBlock_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ColorBlock.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ColorBlock_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ColorBlock.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ColorBlock_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_DropdownEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Dropdown_OptionDataList_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_FontData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_FontData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_FontData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_FontData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_FontData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_FontData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_EndEditEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_EndEditEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_EndEditEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_EndEditEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_EndEditEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_EndEditEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_OnChangeEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_SubmitEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_SubmitEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_SubmitEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_SubmitEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_InputField_SubmitEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_InputField_SubmitEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Navigation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Navigation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Navigation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Navigation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Navigation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Navigation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Scrollbar_ScrollEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_ScrollRect_ScrollRectEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Slider_SliderEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Slider_SliderEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Slider_SliderEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Slider_SliderEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Slider_SliderEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Slider_SliderEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_SpriteState.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_SpriteState_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_SpriteState.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_SpriteState_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_SpriteState.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_SpriteState_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_UnityEngine_UI_Toggle_ToggleEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2x2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2x2_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2x2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2x2_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_bool2x2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_bool2x2_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_quaternion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_quaternion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_quaternion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_quaternion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.Generated.PropertyProviders.PropertyProvider_Unity_Mathematics_quaternion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_Generated_PropertyProviders_PropertyProvider_Unity_Mathematics_quaternion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.LoopingBackground.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_LoopingBackground_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.LoopingBackground.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_LoopingBackground_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.LoopingBackground.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_LoopingBackground_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.ParallaxOffset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_ParallaxOffset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.ParallaxOffset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_ParallaxOffset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.ParallaxOffset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_ParallaxOffset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.StateMachineBehaviour.SetSpawned.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_StateMachineBehaviour_SetSpawned_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.StateMachineBehaviour.SetSpawned.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_StateMachineBehaviour_SetSpawned_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Visuals.StateMachineBehaviour.SetSpawned.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Visuals_StateMachineBehaviour_SetSpawned_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.CoroutineInvoker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_CoroutineInvoker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.CoroutineInvoker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_CoroutineInvoker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.CoroutineInvoker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_CoroutineInvoker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.DeactivateOnStart.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_DeactivateOnStart_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.DeactivateOnStart.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_DeactivateOnStart_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.DeactivateOnStart.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_DeactivateOnStart_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.DebugValue.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_DebugValue_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.DebugValue.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_DebugValue_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.DebugValue.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_DebugValue_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.KeepAliveBetweenScenes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_KeepAliveBetweenScenes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.KeepAliveBetweenScenes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_KeepAliveBetweenScenes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.KeepAliveBetweenScenes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_KeepAliveBetweenScenes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.SceneBuilder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_SceneBuilder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.SceneBuilder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_SceneBuilder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.SceneBuilder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_SceneBuilder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.SceneConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_SceneConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.SceneConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_SceneConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Utils.SceneConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Utils_SceneConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.GameController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_GameController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.GameController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_GameController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.GameController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_GameController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.HealthUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_HealthUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.HealthUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_HealthUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.HealthUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_HealthUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.ItemUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_ItemUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.ItemUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_ItemUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.ItemUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_ItemUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.MenuController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_MenuController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.MenuController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_MenuController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.UI.MenuController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_UI_MenuController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.GroupRegistry.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_GroupRegistry_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.GroupRegistry.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_GroupRegistry_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.GroupRegistry.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_GroupRegistry_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.ItemRegistry.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_ItemRegistry_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.ItemRegistry.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_ItemRegistry_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.ItemRegistry.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_ItemRegistry_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.MessageRegistry.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_MessageRegistry_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.MessageRegistry.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_MessageRegistry_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.MessageRegistry.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_MessageRegistry_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.MovementRegistry.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_MovementRegistry_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.MovementRegistry.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_MovementRegistry_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.MovementRegistry.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_MovementRegistry_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.SoundRegistry.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_SoundRegistry_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.SoundRegistry.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_SoundRegistry_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Registries.SoundRegistry.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Registries_SoundRegistry_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.CameraBounds.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_CameraBounds_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.CameraBounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_CameraBounds_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.CameraBounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_CameraBounds_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.Checkpoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_Checkpoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.Checkpoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_Checkpoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.Checkpoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_Checkpoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.GameConfiguration.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_GameConfiguration_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.GameConfiguration.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_GameConfiguration_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.GameConfiguration.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_GameConfiguration_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.GameData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_GameData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.GameData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_GameData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.GameData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_GameData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.KillZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_KillZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.KillZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_KillZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.KillZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_KillZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.RestrictionBounds.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_RestrictionBounds_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.RestrictionBounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_RestrictionBounds_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Game.RestrictionBounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Game_RestrictionBounds_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.AnimationEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_AnimationEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.AnimationEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_AnimationEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.AnimationEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_AnimationEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.DeactivateParent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_DeactivateParent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.DeactivateParent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_DeactivateParent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.DeactivateParent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_DeactivateParent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.DestroyParent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_DestroyParent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.DestroyParent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_DestroyParent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.DestroyParent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_DestroyParent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.ReplaceParent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_ReplaceParent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.ReplaceParent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_ReplaceParent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Events.Animation.ReplaceParent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Events_Animation_ReplaceParent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.SXPMonobehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_SXPMonobehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.SXPMonobehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_SXPMonobehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.SXPMonobehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_SXPMonobehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Traps.FlameThrowerFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Traps_FlameThrowerFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Traps.FlameThrowerFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Traps_FlameThrowerFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Traps.FlameThrowerFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Traps_FlameThrowerFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Traps.HiddenSpikesFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Traps_HiddenSpikesFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Traps.HiddenSpikesFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Traps_HiddenSpikesFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Traps.HiddenSpikesFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Traps_HiddenSpikesFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Sprites.ExtendableSprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Sprites_ExtendableSprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Sprites.ExtendableSprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Sprites_ExtendableSprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Sprites.ExtendableSprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Sprites_ExtendableSprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Sprites.SpringSprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Sprites_SpringSprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Sprites.SpringSprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Sprites_SpringSprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Sprites.SpringSprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Sprites_SpringSprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.Collectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_Collectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.Collectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_Collectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.Collectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_Collectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.DamageEntity.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_DamageEntity_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.DamageEntity.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_DamageEntity_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.DamageEntity.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_DamageEntity_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.DestroyParentOnTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_DestroyParentOnTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.DestroyParentOnTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_DestroyParentOnTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.DestroyParentOnTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_DestroyParentOnTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.Door.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_Door_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.Door.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_Door_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.Door.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_Door_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.FireBarTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_FireBarTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.FireBarTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_FireBarTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.FireBarTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_FireBarTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.LadderTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_LadderTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.LadderTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_LadderTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.LadderTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_LadderTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PickableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PickableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PickableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PickableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PickableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PickableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PlatformCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PlatformCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PlatformCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PlatformCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PlatformCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PlatformCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PushableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PushableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PushableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PushableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.PushableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_PushableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.TimerEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_TimerEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.TimerEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_TimerEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.TimerEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_TimerEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.TriggerEvent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_TriggerEvent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.TriggerEvent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_TriggerEvent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Objects.TriggerEvent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Objects_TriggerEvent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Simple.MoveLinear.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Simple_MoveLinear_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Simple.MoveLinear.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Simple_MoveLinear_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Simple.MoveLinear.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Simple_MoveLinear_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Simple.MoveSinusoidal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Simple_MoveSinusoidal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Simple.MoveSinusoidal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Simple_MoveSinusoidal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Simple.MoveSinusoidal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Simple_MoveSinusoidal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.BalancingAuto.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_BalancingAuto_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.BalancingAuto.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_BalancingAuto_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.BalancingAuto.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_BalancingAuto_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.FallingFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_FallingFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.FallingFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_FallingFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.FallingFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_FallingFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.MoveLimitAuto.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_MoveLimitAuto_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.MoveLimitAuto.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_MoveLimitAuto_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.MoveLimitAuto.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_MoveLimitAuto_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.RotationAuto.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_RotationAuto_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.RotationAuto.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_RotationAuto_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Platforms.RotationAuto.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Platforms_RotationAuto_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_ClimbFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_ClimbFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_ClimbFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.FollowTargetAuto.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_FollowTargetAuto_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.FollowTargetAuto.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_FollowTargetAuto_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.FollowTargetAuto.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_FollowTargetAuto_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_JumpFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_JumpFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_JumpFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.MoveFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_MoveFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.MoveFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_MoveFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.MoveFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_MoveFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.PushFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_PushFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.PushFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_PushFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.PushFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_PushFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.RunFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_RunFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.RunFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_RunFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.RunFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_RunFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_WalkFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_WalkFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_WalkFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Camera.FollowTargetSmoothAuto.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Camera_FollowTargetSmoothAuto_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Camera.FollowTargetSmoothAuto.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Camera_FollowTargetSmoothAuto_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Camera.FollowTargetSmoothAuto.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Camera_FollowTargetSmoothAuto_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.AnimatorHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_AnimatorHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.AnimatorHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_AnimatorHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.AnimatorHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_AnimatorHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.AudioHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_AudioHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.AudioHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_AudioHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.AudioHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_AudioHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.ColliderHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_ColliderHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.ColliderHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_ColliderHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.ColliderHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_ColliderHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.InputHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_InputHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.InputHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_InputHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.InputHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_InputHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.InputStateHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_InputStateHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.InputStateHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_InputStateHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.InputStateHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_InputStateHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.MessageHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_MessageHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.MessageHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_MessageHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.MessageHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_MessageHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_RigidbodyHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_RigidbodyHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_RigidbodyHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.SpriteRendererHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_SpriteRendererHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.SpriteRendererHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_SpriteRendererHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.SpriteRendererHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_SpriteRendererHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.AddForceFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_AddForceFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.AddForceFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_AddForceFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.AddForceFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_AddForceFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.BooleanGateFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_BooleanGateFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.BooleanGateFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_BooleanGateFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.BooleanGateFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_BooleanGateFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.BounceFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_BounceFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.BounceFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_BounceFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.BounceFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_BounceFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangeLevelFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangeLevelFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangeLevelFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangeLevelFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangeLevelFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangeLevelFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangePositionFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangePositionFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangePositionFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangePositionFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangePositionFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangePositionFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangeSpriteFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangeSpriteFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangeSpriteFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangeSpriteFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ChangeSpriteFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ChangeSpriteFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.CounterFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_CounterFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.CounterFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_CounterFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.CounterFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_CounterFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.EventFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_EventFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.EventFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_EventFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.EventFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_EventFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.FlipFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_FlipFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.FlipFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_FlipFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.FlipFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_FlipFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.FloatingFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_FloatingFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.FloatingFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_FloatingFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.FloatingFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_FloatingFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.GeneratorFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_GeneratorFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.GeneratorFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_GeneratorFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.GeneratorFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_GeneratorFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.LoopFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_LoopFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.LoopFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_LoopFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.LoopFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_LoopFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.MenuFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_MenuFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.MenuFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_MenuFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.MenuFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_MenuFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ParentTargetFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ParentTargetFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ParentTargetFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ParentTargetFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ParentTargetFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ParentTargetFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.PickUpFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_PickUpFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.PickUpFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_PickUpFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.PickUpFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_PickUpFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ReceiveFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ReceiveFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ReceiveFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ReceiveFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ReceiveFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ReceiveFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.RespawnFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_RespawnFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.RespawnFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_RespawnFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.RespawnFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_RespawnFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.SendFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_SendFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.SendFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_SendFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.SendFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_SendFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.SpawnFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_SpawnFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.SpawnFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_SpawnFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.SpawnFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_SpawnFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.TimerFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_TimerFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.TimerFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_TimerFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.TimerFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_TimerFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ToggleFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ToggleFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ToggleFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ToggleFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.ToggleFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_ToggleFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.AmbientHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_AmbientHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.AmbientHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_AmbientHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.AmbientHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_AmbientHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.AngryBlushyFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_AngryBlushyFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.AngryBlushyFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_AngryBlushyFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.AngryBlushyFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_AngryBlushyFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.AppearIfPlayerCloseFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_AppearIfPlayerCloseFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.AppearIfPlayerCloseFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_AppearIfPlayerCloseFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.AppearIfPlayerCloseFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_AppearIfPlayerCloseFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStartFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_BrickHeadStartFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStartFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_BrickHeadStartFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStartFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_BrickHeadStartFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStopFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_BrickHeadStopFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStopFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_BrickHeadStopFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.BrickHeadStopFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_BrickHeadStopFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.ExplosiveEnemyFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_ExplosiveEnemyFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.ExplosiveEnemyFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_ExplosiveEnemyFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.ExplosiveEnemyFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_ExplosiveEnemyFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.GhostStopFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_GhostStopFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.GhostStopFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_GhostStopFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.GhostStopFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_GhostStopFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.HatFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_HatFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.HatFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_HatFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.HatFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_HatFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.ManyWeakPointsFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_ManyWeakPointsFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.ManyWeakPointsFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_ManyWeakPointsFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.ManyWeakPointsFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_ManyWeakPointsFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.WeakPointFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_WeakPointFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.WeakPointFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_WeakPointFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.WeakPointFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_WeakPointFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.WingsFunction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_WingsFunction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.WingsFunction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_WingsFunction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.Enemies.WingsFunction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_Enemies_WingsFunction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.CollisionInfoValue.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_CollisionInfoValue_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.CollisionInfoValue.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_CollisionInfoValue_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.CollisionInfoValue.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_CollisionInfoValue_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.GroupList.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_GroupList_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.GroupList.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_GroupList_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.GroupList.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_GroupList_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.Spawnable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_Spawnable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.Spawnable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_Spawnable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Common.Spawnable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Common_Spawnable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.BossStateSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_BossStateSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.BossStateSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_BossStateSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.BossStateSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_BossStateSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GenerateAndThrowAtTargetAI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GenerateAndThrowAtTargetAI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GenerateAndThrowAtTargetAI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GenerateAndThrowAtTargetAI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GenerateAndThrowAtTargetAI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GenerateAndThrowAtTargetAI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GenerateCanonBallAI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GenerateCanonBallAI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GenerateCanonBallAI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GenerateCanonBallAI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GenerateCanonBallAI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GenerateCanonBallAI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GhostFollowerAI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GhostFollowerAI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GhostFollowerAI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GhostFollowerAI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.GhostFollowerAI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_GhostFollowerAI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.HatCherryAI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_HatCherryAI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.HatCherryAI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_HatCherryAI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.HatCherryAI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_HatCherryAI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.PassiveWalkAI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_PassiveWalkAI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.PassiveWalkAI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_PassiveWalkAI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.PassiveWalkAI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_PassiveWalkAI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.SkeletonAI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_SkeletonAI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.SkeletonAI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_SkeletonAI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.SkeletonAI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_SkeletonAI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.WalkTowardsPlayerAI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_WalkTowardsPlayerAI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.WalkTowardsPlayerAI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_WalkTowardsPlayerAI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.AI.WalkTowardsPlayerAI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_AI_WalkTowardsPlayerAI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimelinePreferences.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimelinePreferences_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TimelinePreferences.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimelinePreferences_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimelinePreferences.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimelinePreferences_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimelineProjectSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimelineProjectSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TimelineProjectSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimelineProjectSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TimelineProjectSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TimelineProjectSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.AnimatorMessageListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_AnimatorMessageListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.AnimatorMessageListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_AnimatorMessageListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.AnimatorMessageListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_AnimatorMessageListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.LudiqBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_LudiqBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.LudiqBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_LudiqBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.LudiqBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_LudiqBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.LudiqScriptableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_LudiqScriptableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.LudiqScriptableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_LudiqScriptableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.LudiqScriptableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_LudiqScriptableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.MacroScriptableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_MacroScriptableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.MacroScriptableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_MacroScriptableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.MacroScriptableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_MacroScriptableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.ScriptGraphAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_ScriptGraphAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.ScriptGraphAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_ScriptGraphAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.ScriptGraphAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_ScriptGraphAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.ScriptMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_ScriptMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.ScriptMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_ScriptMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.ScriptMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_ScriptMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Graphic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Graphic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Graphic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Graphic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Graphic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Graphic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalOrVerticalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalOrVerticalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalOrVerticalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalOrVerticalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalOrVerticalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalOrVerticalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.MaskableGraphic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_MaskableGraphic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.MaskableGraphic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_MaskableGraphic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.MaskableGraphic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_MaskableGraphic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.BaseMeshEffect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_BaseMeshEffect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.BaseMeshEffect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_BaseMeshEffect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.BaseMeshEffect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_BaseMeshEffect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.PanelRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PointerInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PointerInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PointerInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PointerInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PointerInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PointerInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.UIBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_UIBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.UIBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_UIBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.UIBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_UIBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ActivationTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ActivationTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ActivationTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ActivationTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ActivationTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ActivationTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AnimationPlayableAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AnimationPlayableAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AnimationPlayableAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AnimationPlayableAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AnimationPlayableAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AnimationPlayableAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AnimationTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AnimationTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AnimationTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AnimationTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AnimationTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AnimationTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.TimelineAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_TimelineAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.TimelineAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_TimelineAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.TimelineAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_TimelineAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.TrackAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_TrackAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.TrackAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_TrackAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.TrackAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_TrackAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AudioPlayableAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AudioPlayableAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AudioPlayableAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AudioPlayableAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AudioPlayableAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AudioPlayableAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AudioTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AudioTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AudioTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AudioTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.AudioTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_AudioTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ControlPlayableAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ControlPlayableAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ControlPlayableAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ControlPlayableAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ControlPlayableAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ControlPlayableAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ControlTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ControlTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ControlTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ControlTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.ControlTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_ControlTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.Marker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_Marker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.Marker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_Marker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.Marker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_Marker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.MarkerTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_MarkerTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.MarkerTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_MarkerTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.MarkerTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_MarkerTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalEmitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalEmitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalEmitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalEmitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalEmitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalEmitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalReceiver.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalReceiver_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalReceiver.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalReceiver_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalReceiver.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalReceiver_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.SignalTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_SignalTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.GroupTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_GroupTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.GroupTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_GroupTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.GroupTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_GroupTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.PlayableTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_PlayableTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.PlayableTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_PlayableTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Timeline.PlayableTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Timeline_PlayableTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Asset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Asset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Asset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Asset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Asset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Asset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputValidator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputValidator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputValidator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputValidator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputValidator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputValidator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Text.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Text_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Text.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Text_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Text.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Text_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.StateGraphAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_StateGraphAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.StateGraphAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_StateGraphAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.StateGraphAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_StateGraphAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.StateMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_StateMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.StateMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_StateMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Unity.VisualScripting.StateMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Unity_VisualScripting_StateMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.RunFunction.RunStop
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_RunFunction_RunStop()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.RunFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.RunFunction);
			target.RunStop();
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.RunFunction> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.RunFunction>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.RunFunction));
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.WalkFunction.Walk
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_WalkFunction_Walk()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.WalkFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.WalkFunction);
			float arg0 = default(float);
			target.Walk(arg0);
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.WalkFunction, float> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.WalkFunction, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.WalkFunction), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.RunFunction.RunStart
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_RunFunction_RunStart()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.RunFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.RunFunction);
			target.RunStart();
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.RunFunction> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.RunFunction>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.RunFunction));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Input.GetAxis
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Input_GetAxis()
		{
			string arg0 = default(string);
			global::UnityEngine.Input.GetAxis(arg0);
			global::Unity.VisualScripting.StaticFunctionInvoker<string, float> optimized = new global::Unity.VisualScripting.StaticFunctionInvoker<string, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.JumpStart
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_JumpFunction_JumpStart()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction);
			target.JumpStart();
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction));
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.JumpStay
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_JumpFunction_JumpStay()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction);
			target.JumpStay();
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction));
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.JumpStop
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_JumpFunction_JumpStop()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction);
			target.JumpStop();
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction));
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Functions.SendFunction.SendToLastCollision
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Functions_SendFunction_SendToLastCollision()
		{
			global::StudioXP.Scripts.Components.Functions.SendFunction target = default(global::StudioXP.Scripts.Components.Functions.SendFunction);
			target.SendToLastCollision();
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Functions.SendFunction> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Functions.SendFunction>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Functions.SendFunction));
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.JumpFunction.ForceJumpStart
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_JumpFunction_ForceJumpStart()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction);
			target.ForceJumpStart();
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.JumpFunction>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.JumpFunction));
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.MoveHorizontal
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_ClimbFunction_MoveHorizontal()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.ClimbFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.ClimbFunction);
			float arg0 = default(float);
			target.MoveHorizontal(arg0);
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.ClimbFunction, float> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.ClimbFunction, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.ClimbFunction), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.SetBool
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_SetBool()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			bool arg1 = default(bool);
			target.SetBool(arg0, arg1);
			global::Unity.VisualScripting.InstanceActionInvoker<UnityEngine.Animator, string, bool> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<UnityEngine.Animator, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Handlers.RigidbodyHandler.FreezePosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Handlers_RigidbodyHandler_FreezePosition()
		{
			global::StudioXP.Scripts.Components.Handlers.RigidbodyHandler target = default(global::StudioXP.Scripts.Components.Handlers.RigidbodyHandler);
			bool arg0 = default(bool);
			target.FreezePosition(arg0);
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Handlers.RigidbodyHandler, bool> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Handlers.RigidbodyHandler, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Handlers.RigidbodyHandler), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// StudioXP.Scripts.Components.Movements.Characters.ClimbFunction.MoveVertical
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void StudioXP_Scripts_Components_Movements_Characters_ClimbFunction_MoveVertical()
		{
			global::StudioXP.Scripts.Components.Movements.Characters.ClimbFunction target = default(global::StudioXP.Scripts.Components.Movements.Characters.ClimbFunction);
			float arg0 = default(float);
			target.MoveVertical(arg0);
			global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.ClimbFunction, float> optimized = new global::Unity.VisualScripting.InstanceActionInvoker<StudioXP.Scripts.Components.Movements.Characters.ClimbFunction, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::StudioXP.Scripts.Components.Movements.Characters.ClimbFunction), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_ctor()
		{
			new UnityEngine.GameObject();
		}
		
		// UnityEngine.SpriteRenderer..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_ctor()
		{
			new UnityEngine.SpriteRenderer();
		}
	}
}
